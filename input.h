//=============================================================================
//
//	キーボード入力処理 [input.h]
//	Author : SHUMA AIZU
// 
//=============================================================================

#ifndef _INPUT_H_
#define _INPUT_H_

#include "main.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define NUM_KEY_MAX			(256)		//キーの最大数
#define NUM_JOYSTROKE_MAX	(38)
#define JOYKEYSTROKE_START	(0x5800)

//*****************************************************************************
// ジョイパッドのキーの種類
//*****************************************************************************
typedef enum
{
	JOYKEY_UP = 0,				// 十字キー上
	JOYKEY_DOWN,				// 十字キー下
	JOYKEY_LEFT,				// 十字キー左
	JOYKEY_RIGHT,				// 十字キー右
	JOYKEY_START,				// スタートボタン
	JOYKEY_BACK,				// バックボタン
	JOYKEY_LEFT_THUMB,			// 左スティック押し込み
	JOYKEY_RIGHT_THUMB,			// 右スティック押し込み
	JOYKEY_LEFT_SHOULDER,		// Lボタン
	JOYKEY_RIGHT_SHOULDER,		// Rボタン
	JOYKEY_NULL1,				// 未定義
	JOYKEY_NULL2,				// 未定義
	JOYKEY_A,					// Aボタン
	JOYKEY_B,					// Bボタン
	JOYKEY_X,					// Xボタン
	JOYKEY_Y,					// Yボタン
	JOYKEY_MAX					// 総数
}JOYKEY;

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitKeyboard(HINSTANCE hInstance, HWND hWnd);
void UninitKeyboard(void);
void UpdateKeyboard(void);
bool GetKeyboardPress(int nKey);
bool GetKeyboardTrigger(int nKey); 
bool GetKeyboardRelease(int nKey);
bool GetKeyboardRepeat(int nKey);

HRESULT InitJoypad(void);
void UninitJoypad(void);
void UpdateJoypad(void);
bool GetJoypadPress(JOYKEY key);
bool GetJoypadTrigger(JOYKEY key);
bool GetJoypadRelease(JOYKEY key);
bool GetJoypadRepeat(JOYKEY key);
void SetJoypadVibration(int nLVibration, int nRVibration, int nVibCounter);
XINPUT_STATE *GetJoypadState(void);
bool GetJoypadStroke(WORD key);
XINPUT_KEYSTROKE* GetJoypadStroke(void);

#endif
